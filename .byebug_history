c
object
question
:boolean
t.select { |k,v| v["valid_answer"] == "1" }.size
t.select { |k,v| v["valid_answer"] == "1" }
t.permitted?
t = params.require(:question).require(:options_attributes).permit!
t.permitted?
t = params.require(:question).require(:options_attributes)
t = params.require(:question).permit(:options_attributes)
t = params.require(:question).permit(options_attributes: [])
t = params.require(:question)
t = params.require(:question).permit({options_attributes: []})
t = params.require(:question).permit(:options_attributes)
params.permit(:question).permit(:options_attributes)
params
params.permit(:question).permit(:option_attributes)
c
arg
c
arg
c
arg
c
arg
c
a.select { |i,j| j["answer"] == "1" }
a.permitted?
a.class
a = params.require(:question).require(:options_attributes).permit!
params.require(:question).require(:options_attributes).permitted?
params.require(:question).require(:options_attributes).methods
params.require(:question).require(:options_attributes).permit_all
params.require(:question).require(:options_attributes)
params.require(:question)
params
c
Question.where(answer_id: answer_id)
answer_id
c
answer
c
answer
c
answer_id
c
options.where(answer: true).first.id
options.where(answer: true).first
c
user_answer_params
c
user_answer_params
c
params
paramms
user_answer_params
continue
host
continue
\
request.host.gsub(/.watercan.dev/,'')
request.host.gsub('.watercan.dev')
request.host
request.path
request
